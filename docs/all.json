{"shell":true,"revision":"7174de98e6c130e421cca9aa2d1fe2b9d37c716a","objects":[{"type":null,"source":"lib/ex_stripe.ex:1","object_type":"ModuleObject","moduledoc":null,"module":"Elixir.ExStripe","id":"ExStripe"},{"type":null,"source":"lib/ex_stripe/client.ex:2","object_type":"ModuleObject","moduledoc":"Client to connect to the Stripe API through.\n","module":"Elixir.ExStripe.Client","id":"ExStripe.Client"},{"type":null,"source":"lib/ex_stripe/config.ex:2","object_type":"ModuleObject","moduledoc":"Stores configuration variables used to communicate with Stripe's API\n","module":"Elixir.ExStripe.Config","id":"ExStripe.Config"},{"type":"def","source":"lib/ex_stripe.ex:3","signature":[],"object_type":"FunctionObject","name":"api_host","module_id":"ExStripe","id":"api_host/0","doc":null,"arity":0},{"type":"def","source":"lib/ex_stripe/client.ex:6","signature":[["url",[],null],["\\\\",[],[["headers",[],null],[]]],["\\\\",[],[["options",[],null],[]]]],"object_type":"FunctionObject","name":"delete","module_id":"ExStripe.Client","id":"delete/3","doc":"Issues a DELETE request to the given url.\n\nReturns `{:ok, response}` if the request is successful, `{:error, reason}`\notherwise.\n\nSee `request/5` for more detailed information.\n","arity":3},{"type":"def","source":"lib/ex_stripe/client.ex:6","signature":[["url",[],null],["\\\\",[],[["headers",[],null],[]]],["\\\\",[],[["options",[],null],[]]]],"object_type":"FunctionObject","name":"delete!","module_id":"ExStripe.Client","id":"delete!/3","doc":"Issues a DELETE request to the given url, raising an exception in case of\nfailure.\n\nIf the request does not fail, the response is returned.\n\nSee `request!/5` for more detailed information.\n","arity":3},{"type":"def","source":"lib/ex_stripe/client.ex:6","signature":[["url",[],null],["\\\\",[],[["headers",[],null],[]]],["\\\\",[],[["options",[],null],[]]]],"object_type":"FunctionObject","name":"get","module_id":"ExStripe.Client","id":"get/3","doc":"Issues a GET request to the given url.\n\nReturns `{:ok, response}` if the request is successful, `{:error, reason}`\notherwise.\n\nSee `request/5` for more detailed information.\n","arity":3},{"type":"def","source":"lib/ex_stripe/client.ex:6","signature":[["url",[],null],["\\\\",[],[["headers",[],null],[]]],["\\\\",[],[["options",[],null],[]]]],"object_type":"FunctionObject","name":"get!","module_id":"ExStripe.Client","id":"get!/3","doc":"Issues a GET request to the given url, raising an exception in case of\nfailure.\n\nIf the request does not fail, the response is returned.\n\nSee `request!/5` for more detailed information.\n","arity":3},{"type":"def","source":"lib/ex_stripe/client.ex:6","signature":[["url",[],null],["\\\\",[],[["headers",[],null],[]]],["\\\\",[],[["options",[],null],[]]]],"object_type":"FunctionObject","name":"head","module_id":"ExStripe.Client","id":"head/3","doc":"Issues a HEAD request to the given url.\n\nReturns `{:ok, response}` if the request is successful, `{:error, reason}`\notherwise.\n\nSee `request/5` for more detailed information.\n","arity":3},{"type":"def","source":"lib/ex_stripe/client.ex:6","signature":[["url",[],null],["\\\\",[],[["headers",[],null],[]]],["\\\\",[],[["options",[],null],[]]]],"object_type":"FunctionObject","name":"head!","module_id":"ExStripe.Client","id":"head!/3","doc":"Issues a HEAD request to the given url, raising an exception in case of\nfailure.\n\nIf the request does not fail, the response is returned.\n\nSee `request!/5` for more detailed information.\n","arity":3},{"type":"def","source":"lib/ex_stripe/client.ex:6","signature":[["url",[],null],["\\\\",[],[["headers",[],null],[]]],["\\\\",[],[["options",[],null],[]]]],"object_type":"FunctionObject","name":"options","module_id":"ExStripe.Client","id":"options/3","doc":"Issues an OPTIONS request to the given url.\n\nReturns `{:ok, response}` if the request is successful, `{:error, reason}`\notherwise.\n\nSee `request/5` for more detailed information.\n","arity":3},{"type":"def","source":"lib/ex_stripe/client.ex:6","signature":[["url",[],null],["\\\\",[],[["headers",[],null],[]]],["\\\\",[],[["options",[],null],[]]]],"object_type":"FunctionObject","name":"options!","module_id":"ExStripe.Client","id":"options!/3","doc":"Issues a OPTIONS request to the given url, raising an exception in case of\nfailure.\n\nIf the request does not fail, the response is returned.\n\nSee `request!/5` for more detailed information.\n","arity":3},{"type":"def","source":"lib/ex_stripe/client.ex:6","signature":[["url",[],null],["body",[],null],["\\\\",[],[["headers",[],null],[]]],["\\\\",[],[["options",[],null],[]]]],"object_type":"FunctionObject","name":"patch","module_id":"ExStripe.Client","id":"patch/4","doc":"Issues a PATCH request to the given url.\n\nReturns `{:ok, response}` if the request is successful, `{:error, reason}`\notherwise.\n\nSee `request/5` for more detailed information.\n","arity":4},{"type":"def","source":"lib/ex_stripe/client.ex:6","signature":[["url",[],null],["body",[],null],["\\\\",[],[["headers",[],null],[]]],["\\\\",[],[["options",[],null],[]]]],"object_type":"FunctionObject","name":"patch!","module_id":"ExStripe.Client","id":"patch!/4","doc":"Issues a PATCH request to the given url, raising an exception in case of\nfailure.\n\nIf the request does not fail, the response is returned.\n\nSee `request!/5` for more detailed information.\n","arity":4},{"type":"def","source":"lib/ex_stripe/client.ex:6","signature":[["url",[],null],["body",[],null],["\\\\",[],[["headers",[],null],[]]],["\\\\",[],[["options",[],null],[]]]],"object_type":"FunctionObject","name":"post","module_id":"ExStripe.Client","id":"post/4","doc":"Issues a POST request to the given url.\n\nReturns `{:ok, response}` if the request is successful, `{:error, reason}`\notherwise.\n\nSee `request/5` for more detailed information.\n","arity":4},{"type":"def","source":"lib/ex_stripe/client.ex:6","signature":[["url",[],null],["body",[],null],["\\\\",[],[["headers",[],null],[]]],["\\\\",[],[["options",[],null],[]]]],"object_type":"FunctionObject","name":"post!","module_id":"ExStripe.Client","id":"post!/4","doc":"Issues a POST request to the given url, raising an exception in case of\nfailure.\n\nIf the request does not fail, the response is returned.\n\nSee `request!/5` for more detailed information.\n","arity":4},{"type":"def","source":"lib/ex_stripe/client.ex:20","signature":[["headers",[],null]],"object_type":"FunctionObject","name":"process_request_headers","module_id":"ExStripe.Client","id":"process_request_headers/1","doc":"Builds the headers for the request, mergining in the API key.\n\n## Examples\n\n    iex> ExStripe.Client.process_request_headers([])\n    [{\"Authorization\", \"Bearer sk_test_foobar\"}]\n","arity":1},{"type":"def","source":"lib/ex_stripe/client.ex:32","signature":[["body",[],null]],"object_type":"FunctionObject","name":"process_response_body","module_id":"ExStripe.Client","id":"process_response_body/1","doc":"Converts body of request into Elixir objects\n\n## Examples\n\n    iex> ExStripe.Client.process_response_body(~s({\"foo\": 1}))\n    %{\"foo\" => 1}\n","arity":1},{"type":"def","source":"lib/ex_stripe/client.ex:8","signature":[["url",[],null]],"object_type":"FunctionObject","name":"process_url","module_id":"ExStripe.Client","id":"process_url/1","doc":"Builds a URL for a Stripe resource.\n\n## Examples\n\n    iex> ExStripe.Client.process_url(\"/foobar\")\n    \"https://api.stripe.com/foobar\"\n","arity":1},{"type":"def","source":"lib/ex_stripe/client.ex:6","signature":[["url",[],null],["body",[],null],["\\\\",[],[["headers",[],null],[]]],["\\\\",[],[["options",[],null],[]]]],"object_type":"FunctionObject","name":"put","module_id":"ExStripe.Client","id":"put/4","doc":"Issues a PUT request to the given url.\n\nReturns `{:ok, response}` if the request is successful, `{:error, reason}`\notherwise.\n\nSee `request/5` for more detailed information.\n","arity":4},{"type":"def","source":"lib/ex_stripe/client.ex:6","signature":[["url",[],null],["body",[],null],["\\\\",[],[["headers",[],null],[]]],["\\\\",[],[["options",[],null],[]]]],"object_type":"FunctionObject","name":"put!","module_id":"ExStripe.Client","id":"put!/4","doc":"Issues a PUT request to the given url, raising an exception in case of\nfailure.\n\nIf the request does not fail, the response is returned.\n\nSee `request!/5` for more detailed information.\n","arity":4},{"type":"def","source":"lib/ex_stripe/client.ex:6","signature":[["method",[],null],["url",[],null],["\\\\",[],[["body",[],null],""]],["\\\\",[],[["headers",[],null],[]]],["\\\\",[],[["options",[],null],[]]]],"object_type":"FunctionObject","name":"request","module_id":"ExStripe.Client","id":"request/5","doc":"Issues an HTTP request with the given method to the given url.\n\nThis function is usually used indirectly by `get/3`, `post/4`, `put/4`, etc\n\nArgs:\n  * `method` - HTTP method as an atom (`:get`, `:head`, `:post`, `:put`,\n    `:delete`, etc.)\n  * `url` - target url as a binary string or char list\n  * `body` - request body. See more below\n  * `headers` - HTTP headers as an orddict (e.g., `[{\"Accept\", \"application/json\"}]`)\n  * `options` - Keyword list of options\n\nBody:\n  * binary, char list or an iolist\n  * `{:form, [{K, V}, ...]}` - send a form url encoded\n  * `{:file, \"/path/to/file\"}` - send a file\n\nOptions:\n  * `:timeout` - timeout to establish a connection, in milliseconds. Default is 8000\n  * `:recv_timeout` - timeout used when receiving a connection. Default is 5000\n  * `:stream_to` - a PID to stream the response to\n  * `:proxy` - a proxy to be used for the request; it can be a regular url\n    or a `{Host, Proxy}` tuple\n  * `:proxy_auth` - proxy authentication `{User, Password}` tuple\n  * `:ssl` - SSL options supported by the `ssl` erlang module\n  * `:follow_redirect` - a boolean that causes redirects to be followed\n  * `:max_redirect` - an integer denoting the maximum number of redirects to follow\n  * `:params` - an enumerable consisting of two-item tuples that will be appended to the url as query string parameters\n\nTimeouts can be an integer or `:infinity`\n\nThis function returns `{:ok, response}` or `{:ok, async_response}` if the\nrequest is successful, `{:error, reason}` otherwise.\n\n## Examples\n\n    request(:post, \"https://my.website.com\", \"{\\\"foo\\\": 3}\", [{\"Accept\", \"application/json\"}])\n\n","arity":5},{"type":"def","source":"lib/ex_stripe/client.ex:6","signature":[["method",[],null],["url",[],null],["\\\\",[],[["body",[],null],""]],["\\\\",[],[["headers",[],null],[]]],["\\\\",[],[["options",[],null],[]]]],"object_type":"FunctionObject","name":"request!","module_id":"ExStripe.Client","id":"request!/5","doc":"Issues an HTTP request with the given method to the given url, raising an\nexception in case of failure.\n\n`request!/5` works exactly like `request/5` but it returns just the\nresponse in case of a successful request, raising an exception in case the\nrequest fails.\n","arity":5},{"type":"def","source":"lib/ex_stripe/client.ex:6","signature":[],"object_type":"FunctionObject","name":"start","module_id":"ExStripe.Client","id":"start/0","doc":"Starts HTTPoison and its dependencies.\n","arity":0},{"type":"def","source":"lib/ex_stripe/client.ex:6","signature":[["target",[],null]],"object_type":"FunctionObject","name":"transformer","module_id":"ExStripe.Client","id":"transformer/1","doc":false,"arity":1},{"type":"def","source":"lib/ex_stripe/config.ex:6","signature":[],"object_type":"FunctionObject","name":"api_key","module_id":"ExStripe.Config","id":"api_key/0","doc":"Returns the API key for your stripe account. Set it in `config/config.exs`:\n\n    config :ex_stripe, api_key: \"sk_test_foobar\"\n\nFind your API key by opening your Stripe account settings and clicking on the\nAPI Keys link. The Secret Key is used as your API key.\n\n## Examples\n\n    iex> Application.put_env(:ex_stripe, :api_key, \"sk_test_foobar\")\n    iex> ExStripe.Config.api_key\n    \"sk_test_foobar\"\n","arity":0}],"language":"elixir","git_repo_url":"https://github.com/davejlong/ex_stripe.git","client_version":"0.5.3","client_name":"inch_ex","branch_name":"master","args":[]}